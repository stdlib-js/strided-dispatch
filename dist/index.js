"use strict";var k=function(u,a){return function(){return a||u((a={exports:{}}).exports,a),a.exports}};var j=k(function(D,O){"use strict";var x=require("@stdlib/assert-is-nonnegative-integer").isPrimitive,A=require("@stdlib/assert-is-positive-integer"),I=require("@stdlib/assert-is-integer").isPrimitive,N=require("@stdlib/assert-is-function-array"),P=require("@stdlib/assert-is-function"),F=require("@stdlib/assert-is-collection"),t=require("@stdlib/string-format"),U=require("@stdlib/math-base-special-abs"),S=require("@stdlib/blas-ext-base-gindex-of-row").ndarray;function B(u,a,s,i,w,y){var o,m,n,v,g,E;if(P(u))E=u;else if(!N(u))throw new TypeError(t("invalid argument. First argument must be either a function or an array of functions. Value: `%s`.",u));if(!F(a))throw new TypeError(t("invalid argument. Second argument must be an array-like object. Value: `%s`.",a));if(!F(s)&&s!==null)throw new TypeError(t("invalid argument. Third argument must be an array-like object or null. Value: `%s`.",s));if(!A(i))throw new TypeError(t("invalid argument. Fourth argument must be a positive integer. Value: `%s`.",i));if(!x(w))throw new TypeError(t("invalid argument. Fifth argument must be a nonnegative integer. Value: `%s`.",w));if(!x(y))throw new TypeError(t("invalid argument. Sixth argument must be a nonnegative integer. Value: `%s`.",y));if(n=w+y,n===0)throw new Error("invalid arguments. Interface must accept at least one strided input and/or output array. Based on the provided arguments, `nin+nout` equals `0`.");if(E){if(v=a.length/n,!I(v))throw new Error("invalid argument. Unexpected number of types. A type must be specified for each strided input and output array for each provided strided array function.")}else if(v=u.length,a.length!==v*n)throw new Error("invalid argument. Unexpected number of types. A type must be specified for each strided input and output array for each provided strided array function.");if(s&&s.length!==v)throw new Error("invalid argument. The third argument must have the same number of elements as the first argument.");if(n*3+1===i)m=!1;else if(n*4+1===i)m=!0;else throw new Error("invalid argument. Fourth argument is incompatible with the number of strided input and output arrays.");return m?o=4:o=3,g=w*o+1,R;function R(){var d,c,l,V,b,q,f,h,r,p,e,T;if(q=arguments.length,q!==i)throw q<i?new Error("invalid invocation. Insufficient arguments."):new Error("invalid invocation. Too many arguments.");if(h=arguments[0],!I(h))throw new TypeError(t("invalid argument. First argument must be an integer. Value: `%s`.",h));for(b=[h],V=[],e=1;e<i;e+=o)V.push(arguments[e]);for(d=[],e=3;e<i;e+=o){if(r=arguments[e],!I(r))throw e<g?new TypeError(t("invalid argument. Input array stride must be an integer. Value: `%s`.",r)):new TypeError(t("invalid argument. Output array stride must be an integer. Value: `%s`.",r));d.push(r)}if(m)for(c=[],e=4;e<i;e+=o){if(r=arguments[e],!x(r))throw e<g?new TypeError(t("invalid argument. Input array offset must be a nonnegative integer. Value: `%s`.",r)):new TypeError(t("invalid argument. Output array offset must be a nonnegative integer. Value: `%s`.",r));c.push(r)}for(l=[],e=2;e<i;e+=o){if(r=arguments[e],!F(r))throw e<g?new TypeError(t("invalid argument. Input array must be an array-like object. Value: `%s`.",r)):new TypeError(t("invalid argument. Output array must be an array-like object. Value: `%s`.",r));if(T=(e-2)/o,m){if(f=c[T]+(h-1)*d[T],h>0&&(f<0||f>=r.length))throw e<g?new RangeError("invalid argument. Input array has insufficient elements based on the associated stride and the number of indexed elements."):new RangeError("invalid argument. Output array has insufficient elements based on the associated stride and the number of indexed elements.")}else if((h-1)*U(d[T])>=r.length)throw e<g?new RangeError("invalid argument. Input array has insufficient elements based on the associated stride and the number of indexed elements."):new RangeError("invalid argument. Output array has insufficient elements based on the associated stride and the number of indexed elements.");l.push(r)}if(f=S(v,n,a,n,1,0,V,1,0),f<0)throw new TypeError("invalid arguments. Unable to resolve a strided array function supporting the provided array argument data types.");if(E?p=E:p=u[f],s?m?p(l,b,d,c,s[f]):p(l,b,d,s[f]):m?p(l,b,d,c):p(l,b,d),y===1)return l[n-1];if(y!==0)return l.slice(w)}}O.exports=B});var C=j();module.exports=C;
/**
* @license Apache-2.0
*
* Copyright (c) 2020 The Stdlib Authors.
*
* Licensed under the Apache License, Version 2.0 (the "License");
* you may not use this file except in compliance with the License.
* You may obtain a copy of the License at
*
*    http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing, software
* distributed under the License is distributed on an "AS IS" BASIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
* See the License for the specific language governing permissions and
* limitations under the License.
*/
//# sourceMappingURL=index.js.map
